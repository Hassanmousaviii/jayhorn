package benchtop;

/**
 *
 * An execution bundle is an object that encapsulates a sequence of Benchtop operations,
 * including
 *
 * <ul>
 *   <li>Specifying the directory containing a project's compiled Java files</li>
 *   <li>Specifying Randoop's output directory</li>
 *   <li>Auto-resolving the classpath needed run Randoop</li>
 *   <li>Executing the tests generated by Randoop</li>
 * </ul>
 *
 * The code below shows an example of how to construct a bundle.
 *
 * <pre>
 *   // creates bundle
 *   ExecutionBundle a = new ExecutionBundle(){
 *     &#64Override public void configure(Environment host){
 *        host.bundleTarget(new File(..));
 *        host.bundleOutput(new File(..));
 *        host.bundleClasspath();
 *        host.bundleFocus("Regression");
 *     }
 *   }
 *
 *   // pass it to Benchtop, sit down, and let Benchtop
 *   // produce-execute all the needed tests
 *   Benchtop.consume(a);
 * </pre>
 *
 * @author Huascar Sanchez
 */
public interface ExecutionBundle {

  /**
   * Bundles a set of Benchtop operations.
   *
   * @param host the Benchtop's host.
   */
  void configure(Environment host);
}
